name: Deploy with Git

on:
  pull_request:
    branches: [ develop ]
    types: [opened, synchronize, reopened]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    environment:
      name: development
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    
    - name: Trigger deployment via webhook
      run: |
        # M√©todo 1: Webhook simple
        curl -X POST \
          -H "Content-Type: application/json" \
          -d '{
            "repository": "${{ github.repository }}",
            "branch": "${{ github.head_ref || github.ref_name }}",
            "commit": "${{ github.sha }}",
            "action": "deploy",
            "environment": "development"
          }' \
          http://${{ secrets.DEV_VPS_HOST }}:9000/deploy || echo "Webhook method 1 attempted"
        
        # M√©todo 2: Webhook alternativo
        curl -X POST \
          -H "X-GitHub-Event: push" \
          -H "X-GitHub-Delivery: ${{ github.run_id }}" \
          -d '{
            "ref": "refs/heads/${{ github.head_ref || github.ref_name }}",
            "repository": {
              "clone_url": "${{ github.event.repository.clone_url }}",
              "name": "${{ github.event.repository.name }}"
            }
          }' \
          http://${{ secrets.DEV_VPS_HOST }}:8080/webhook || echo "Webhook method 2 attempted"
        
        # M√©todo 3: API directa si tienes endpoint personalizado
        curl -X POST \
          -H "Authorization: Bearer ${{ secrets.DEPLOY_TOKEN }}" \
          -H "Content-Type: application/json" \
          -d '{
            "command": "deploy",
            "branch": "${{ github.head_ref || github.ref_name }}",
            "env": {
              "PAYPAL_API_CLIENT": "${{ secrets.PAYPAL_API_CLIENT }}",
              "PAYPAL_API_SECRET": "${{ secrets.PAYPAL_API_SECRET }}",
              "JWT_SECRET": "${{ secrets.JWT_SECRET }}",
              "DATABASE_URL": "${{ secrets.DATABASE_URL }}"
            }
          }' \
          http://${{ secrets.DEV_VPS_HOST }}:3000/api/deploy || echo "Direct API attempted"
        
        echo "‚úÖ Deploy signals sent to server"
    
    - name: Wait for deployment
      run: |
        echo "‚è≥ Waiting for deployment to complete..."
        sleep 60
        
        for i in {1..20}; do
          echo "üîç Checking deployment status... ($i/20)"
          
          # Check if app is responding
          if curl -f -s --connect-timeout 5 http://${{ secrets.DEV_VPS_HOST }}:3001/api-docs >/dev/null 2>&1; then
            echo "‚úÖ Application deployed successfully!"
            echo "üåê Available at: http://${{ secrets.DEV_VPS_HOST }}:3001"
            exit 0
          fi
          
          # Check deployment status endpoint if available
          curl -s http://${{ secrets.DEV_VPS_HOST }}:9000/status 2>/dev/null || true
          
          sleep 15
        done
        
        echo "‚ö†Ô∏è Deployment verification timeout reached"
        echo "Check server logs manually or deployment may still be in progress"