name: Deploy to Development Server

on:
  pull_request:
    branches: [ develop ]
    types: [opened, synchronize, reopened]
  workflow_dispatch:
    inputs:
      pr_number:
        description: 'PR number to deploy (optional)'
        required: false
        type: string

jobs:
  deploy-development:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        ref: ${{ github.event.inputs.pr_number != '' && format('refs/pull/{0}/head', github.event.inputs.pr_number) || github.head_ref }}
    
    - name: Deploy to VPS
      uses: easingthemes/ssh-deploy@main
      env:
          SSH_PRIVATE_KEY: ${{ secrets.DEV_VPS_SSH_KEY }}
          REMOTE_HOST: ${{ secrets.DEV_VPS_HOST }}
          REMOTE_USER: ubuntu
          TARGET: ~/component-store-api-dev/
          EXCLUDE: ".git,.github,node_modules"
          SCRIPT_AFTER: |
            cd ~/component-store-api-dev
            cat > .env << EOL
            PORT=3000
            PAYPAL_API_CLIENT=${{ secrets.PAYPAL_API_CLIENT }}
            PAYPAL_API_SECRET=${{ secrets.PAYPAL_API_SECRET }}
            PAYPAL_API_URL=https://api.sandbox.paypal.com
            HOST=http://${{ secrets.DEV_VPS_HOST }}:3001
            JWT_SECRET=${{ secrets.JWT_SECRET }}
            DATABASE_URL=${{ secrets.DATABASE_URL }}
            NODE_ENV=development
            EOL
            
            cat > docker-compose.dev.yaml << 'EOLDC'
            version: "3.8"
            
            services:
              api-dev:
                build:
                  context: .
                  dockerfile: Dockerfile
                container_name: component-store-api-dev
                restart: unless-stopped
                ports:
                  - "3001:3000"
                environment:
                  NODE_ENV: development
                  PORT: 3000
                  DATABASE_URL: \${DATABASE_URL}
                  PAYPAL_API_CLIENT: \${PAYPAL_API_CLIENT}
                  PAYPAL_API_SECRET: \${PAYPAL_API_SECRET}
                  PAYPAL_API_URL: \${PAYPAL_API_URL}
                  HOST: \${HOST}
                  JWT_SECRET: \${JWT_SECRET}
                volumes:
                  - ./src/public:/app/src/public:ro
                command: sh -c "npx prisma migrate deploy && npm run dev"
            EOLDC
            
            # Check if Docker is installed
            if ! command -v docker &> /dev/null; then
              sudo apt-get update
              sudo apt-get install -y apt-transport-https ca-certificates curl software-properties-common
              curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
              sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
              sudo apt-get update
              sudo apt-get install -y docker-ce docker-ce-cli containerd.io docker-compose
              sudo systemctl start docker
              sudo systemctl enable docker
            fi
            
            sudo docker-compose -f docker-compose.dev.yaml down || true
            sudo docker-compose -f docker-compose.dev.yaml build --no-cache
            sudo docker-compose -f docker-compose.dev.yaml up -d
            
            # Verify deployment
            sleep 15
            if sudo docker ps | grep -q component-store-api-dev; then
              echo "Container running successfully"
            else
              echo "Container failed to start"
              sudo docker-compose -f docker-compose.dev.yaml logs
            fig